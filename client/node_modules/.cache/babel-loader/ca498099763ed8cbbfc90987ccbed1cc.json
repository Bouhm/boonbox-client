{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\sidebar\\\\Sidebar.tsx\";\nimport './Sidebar.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeTab } from '../../store/sidebar/actions';\nimport TabContainer from './Tabs';\nimport Tools from './tools/Tools';\nimport Dices from './dnd/Dices';\nconst Tabs = [{\n  label: 'Tools',\n  content: /*#__PURE__*/React.createElement(Tools, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }\n  })\n}, {\n  label: 'DnD',\n  content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dices, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }))\n}];\n\nconst Sidebar = ({\n  isOpen = true,\n  activeTab,\n  changeTab\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabContainer, {\n    tabs: Tabs,\n    activeTab: activeTab,\n    onChange: changeTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return { ...state.sidebar\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  changeTab\n});\nexport default connector(Sidebar);","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/sidebar/Sidebar.tsx"],"names":["React","connect","changeTab","TabContainer","Tools","Dices","Tabs","label","content","Sidebar","isOpen","activeTab","mapStateToProps","state","sidebar","connector"],"mappings":";AAAA,OAAO,eAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,YAAP,MAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,IAAY,GAAG,CACnB;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFX,CADmB,EAKnB;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,OAAO,eACL,uDACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAHJ,CALmB,CAArB;;AAsBA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,IAAX;AAAiBC,EAAAA,SAAjB;AAA4BT,EAAAA;AAA5B,CAAD,KAAoD;AAClE,MAAI,CAACQ,MAAL,EAAa,OAAO,IAAP;AAEb,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEJ,IAApB;AAA0B,IAAA,SAAS,EAAEK,SAArC;AAAgD,IAAA,QAAQ,EAAET,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD;;AAUA,MAAMU,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO,EAAE,GAAGA,KAAK,CAACC;AAAX,GAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGd,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAzB;AAEA,eAAea,SAAS,CAACN,OAAD,CAAxB","sourcesContent":["import './Sidebar.css';\r\n\r\nimport React from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { changeTab } from '../../store/sidebar/actions';\r\nimport { AppState } from '../App';\r\nimport TabContainer, { ITab } from './Tabs';\r\nimport Tools from './tools/Tools';\r\nimport Dices from './dnd/Dices';\r\n\r\nconst Tabs: ITab[] = [\r\n  {\r\n    label: 'Tools',\r\n    content: <Tools />,\r\n  },\r\n  {\r\n    label: 'DnD',\r\n    content: (\r\n      <>\r\n        <Dices />\r\n      </>\r\n    ),\r\n  },\r\n];\r\n\r\nexport type SidebarProps = {\r\n  isOpen?: boolean;\r\n  activeTab: number;\r\n};\r\n\r\ntype Props = SidebarProps & ConnectedProps<typeof connector>;\r\n\r\nconst Sidebar = ({ isOpen = true, activeTab, changeTab }: Props) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      <TabContainer tabs={Tabs} activeTab={activeTab} onChange={changeTab} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return { ...state.sidebar };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { changeTab });\r\n\r\nexport default connector(Sidebar);\r\n"]},"metadata":{},"sourceType":"module"}