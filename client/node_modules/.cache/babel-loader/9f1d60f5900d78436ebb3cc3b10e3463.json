{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\sidebar\\\\Tools.tsx\";\nimport './Toolbar.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPiece } from '../../store/board/actions';\nimport { toggleToolbar as toggleSidebar } from '../../store/sidebar/actions';\nimport Input from '../form/Input';\nimport ObjectSelector from './ObjectSelector';\nimport useForm from '../form/useForm';\n\nconst Tools = ({\n  isOpen = true,\n  addPiece,\n  toggleToolbar\n}) => {\n  const bgInputName = 'background';\n  const objValName = 'value';\n  const {\n    formData,\n    handleInputChange\n  } = useForm({\n    [bgInputName]: '',\n    [objValName]: ''\n  });\n  if (!isOpen) return null;\n\n  const handleAddNewObject = () => {\n    const key = '_' + Math.random().toString(36).substr(2, 9);\n    addPiece({\n      key,\n      data: formData[objValName],\n      type: 'text'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: bgInputName,\n    value: formData[bgInputName],\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ObjectSelector, {\n    handleAddNewObject: handleAddNewObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: objValName,\n    value: formData[objValName],\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return { ...state.toolbar\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  addPiece,\n  toggleToolbar: toggleSidebar\n});\nexport default connector(Tools);","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/sidebar/Tools.tsx"],"names":["React","connect","addPiece","toggleToolbar","toggleSidebar","Input","ObjectSelector","useForm","Tools","isOpen","bgInputName","objValName","formData","handleInputChange","handleAddNewObject","key","Math","random","toString","substr","data","type","mapStateToProps","state","toolbar","connector"],"mappings":";AAAA,OAAO,eAAP;AAEA,OAAOA,KAAP,MAA6C,OAA7C;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,aAAa,IAAIC,aAA1B,QAA+C,6BAA/C;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAQA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,IAAX;AAAiBP,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAuD;AACnE,QAAMO,WAAW,GAAG,YAApB;AACA,QAAMC,UAAU,GAAG,OAAnB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCN,OAAO,CAAC;AAAE,KAACG,WAAD,GAAe,EAAjB;AAAqB,KAACC,UAAD,GAAc;AAAnC,GAAD,CAA/C;AAEA,MAAI,CAACF,MAAL,EAAa,OAAO,IAAP;;AAEb,QAAMK,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,GAAG,GACP,MACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,MAFH,CAEU,CAFV,EAEa,CAFb,CAFF;AAMAjB,IAAAA,QAAQ,CAAC;AACPa,MAAAA,GADO;AAEPK,MAAAA,IAAI,EAAER,QAAQ,CAACD,UAAD,CAFP;AAGPU,MAAAA,IAAI,EAAE;AAHC,KAAD,CAAR;AAKD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEX,WAAb;AAA0B,IAAA,KAAK,EAAEE,QAAQ,CAACF,WAAD,CAAzC;AAAwD,IAAA,QAAQ,EAAEG,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,kBAAkB,EAAEC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,UAAb;AAAyB,IAAA,KAAK,EAAEC,QAAQ,CAACD,UAAD,CAAxC;AAAsD,IAAA,QAAQ,EAAEE,iBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA5BD;;AA8BA,MAAMS,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO,EAAE,GAAGA,KAAK,CAACC;AAAX,GAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGxB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA,QAAF;AAAYC,EAAAA,aAAa,EAAEC;AAA3B,CAAlB,CAAzB;AAEA,eAAeqB,SAAS,CAACjB,KAAD,CAAxB","sourcesContent":["import './Toolbar.css';\r\n\r\nimport React, { ChangeEvent, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { addPiece } from '../../store/board/actions';\r\nimport { toggleToolbar as toggleSidebar } from '../../store/sidebar/actions';\r\nimport { AppState } from '../App';\r\nimport Input from '../form/Input';\r\nimport ObjectSelector from './ObjectSelector';\r\nimport useForm from '../form/useForm';\r\n\r\nexport type ToolsProps = {\r\n  isOpen?: boolean;\r\n};\r\n\r\ntype Props = ToolsProps & ConnectedProps<typeof connector>;\r\n\r\nconst Tools = ({ isOpen = true, addPiece, toggleToolbar }: Props) => {\r\n  const bgInputName = 'background';\r\n  const objValName = 'value';\r\n  const { formData, handleInputChange } = useForm({ [bgInputName]: '', [objValName]: '' });\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const handleAddNewObject = () => {\r\n    const key =\r\n      '_' +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9);\r\n\r\n    addPiece({\r\n      key,\r\n      data: formData[objValName],\r\n      type: 'text',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <Input name={bgInputName} value={formData[bgInputName]} onChange={handleInputChange} />\r\n      <ObjectSelector handleAddNewObject={handleAddNewObject} />\r\n      <Input name={objValName} value={formData[objValName]} onChange={handleInputChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return { ...state.toolbar };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { addPiece, toggleToolbar: toggleSidebar });\r\n\r\nexport default connector(Tools);\r\n"]},"metadata":{},"sourceType":"module"}