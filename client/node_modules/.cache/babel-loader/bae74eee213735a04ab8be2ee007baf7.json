{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\toolbar\\\\Toolbar.tsx\";\nimport './Toolbar.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPiece } from '../../store/board/actions';\nimport { toggleToolbar } from '../../store/toolbar/actions';\nimport Input from '../form/Input';\nimport ObjectSelector from './ObjectSelector';\nimport uuid from 'uuid';\n\nconst Toolbar = ({\n  isOpen = true,\n  addPiece,\n  toggleToolbar\n}) => {\n  if (!isOpen) return null;\n\n  const handleAddNewObject = () => {\n    addPiece({\n      key: uuid,\n      data: 'HELLO',\n      type: 'text'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Background:\"), /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ObjectSelector, {\n    handleAddNewObject: handleAddNewObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return { ...state.toolbar\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  addPiece,\n  toggleToolbar\n});\nexport default connector(Toolbar);","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/toolbar/Toolbar.tsx"],"names":["React","connect","addPiece","toggleToolbar","Input","ObjectSelector","uuid","Toolbar","isOpen","handleAddNewObject","key","data","type","mapStateToProps","state","toolbar","connector"],"mappings":";AAAA,OAAO,eAAP;AAEA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,IAAX;AAAiBN,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAuD;AACrE,MAAI,CAACK,MAAL,EAAa,OAAO,IAAP;;AAEb,QAAMC,kBAAkB,GAAG,MAAM;AAC/BP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,GAAG,EAAEJ,IAAP;AAAaK,MAAAA,IAAI,EAAE,OAAnB;AAA4BC,MAAAA,IAAI,EAAE;AAAlC,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,cAAD;AAAgB,IAAA,kBAAkB,EAAEH,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAdD;;AAgBA,MAAMI,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO,EAAE,GAAGA,KAAK,CAACC;AAAX,GAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGf,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAzB;AAEA,eAAea,SAAS,CAACT,OAAD,CAAxB","sourcesContent":["import './Toolbar.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { addPiece } from '../../store/board/actions';\r\nimport { toggleToolbar } from '../../store/toolbar/actions';\r\nimport { AppState } from '../App';\r\nimport Input from '../form/Input';\r\nimport ObjectSelector from './ObjectSelector';\r\nimport uuid from 'uuid';\r\n\r\nexport type ToolbarProps = {\r\n  isOpen?: boolean;\r\n};\r\n\r\ntype Props = ToolbarProps & ConnectedProps<typeof connector>;\r\n\r\nconst Toolbar = ({ isOpen = true, addPiece, toggleToolbar }: Props) => {\r\n  if (!isOpen) return null;\r\n\r\n  const handleAddNewObject = () => {\r\n    addPiece({ key: uuid, data: 'HELLO', type: 'text' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <label>Background:</label>\r\n      <Input />\r\n      <ObjectSelector handleAddNewObject={handleAddNewObject} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return { ...state.toolbar };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { addPiece, toggleToolbar });\r\n\r\nexport default connector(Toolbar);\r\n"]},"metadata":{},"sourceType":"module"}