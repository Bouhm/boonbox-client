{"ast":null,"code":"import cloneDeep from \"lodash.clonedeep\";\nimport { BoardActions } from \"../actions\";\nexport const initialState = {\n  pieces: []\n};\nexport const boardReducer = (state = initialState, action) => {\n  let newBoard = cloneDeep(state);\n\n  switch (action.type) {\n    case BoardActions.SetBoard:\n      return action.payload;\n\n    case BoardActions.AddPiece:\n      newBoard.pieces.push(action.payload);\n      return { ...state,\n        ...newBoard\n      };\n\n    case BoardActions.RemovePiece:\n      let idx = newBoard.pieces.indexOf(action.payload);\n      newBoard.pieces.splice(idx, 1);\n      return { ...state,\n        ...newBoard\n      };\n\n    case BoardActions.UpdatePiece:\n      idx = newBoard.pieces.indexOf(action.payload);\n      newBoard.pieces[idx] = action.payload;\n      return { ...state,\n        ...newBoard\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/store/board/reducers/index.ts"],"names":["cloneDeep","BoardActions","initialState","pieces","boardReducer","state","action","newBoard","type","SetBoard","payload","AddPiece","push","RemovePiece","idx","indexOf","splice","UpdatePiece"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AAGA,SAASC,YAAT,QAA+C,YAA/C;AAEA,OAAO,MAAMC,YAAwB,GAAG;AACtCC,EAAAA,MAAM,EAAE;AAD8B,CAAjC;AAIP,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAoD;AAC9E,MAAIC,QAAQ,GAAGP,SAAS,CAACK,KAAD,CAAxB;;AAEA,UAAQC,MAAM,CAACE,IAAf;AACE,SAAKP,YAAY,CAACQ,QAAlB;AACE,aAAOH,MAAM,CAACI,OAAd;;AACF,SAAKT,YAAY,CAACU,QAAlB;AACEJ,MAAAA,QAAQ,CAACJ,MAAT,CAAgBS,IAAhB,CAAqBN,MAAM,CAACI,OAA5B;AACA,aAAO,EAAE,GAAGL,KAAL;AAAY,WAAGE;AAAf,OAAP;;AACF,SAAKN,YAAY,CAACY,WAAlB;AACE,UAAIC,GAAG,GAAGP,QAAQ,CAACJ,MAAT,CAAgBY,OAAhB,CAAwBT,MAAM,CAACI,OAA/B,CAAV;AACAH,MAAAA,QAAQ,CAACJ,MAAT,CAAgBa,MAAhB,CAAuBF,GAAvB,EAA4B,CAA5B;AACA,aAAO,EAAE,GAAGT,KAAL;AAAY,WAAGE;AAAf,OAAP;;AACF,SAAKN,YAAY,CAACgB,WAAlB;AACEH,MAAAA,GAAG,GAAGP,QAAQ,CAACJ,MAAT,CAAgBY,OAAhB,CAAwBT,MAAM,CAACI,OAA/B,CAAN;AACAH,MAAAA,QAAQ,CAACJ,MAAT,CAAgBW,GAAhB,IAAuBR,MAAM,CAACI,OAA9B;AACA,aAAO,EAAE,GAAGL,KAAL;AAAY,WAAGE;AAAf,OAAP;;AACF;AACE,aAAOF,KAAP;AAfJ;AAiBD,CApBM","sourcesContent":["import cloneDeep from \"lodash.clonedeep\";\r\n\r\nimport { BoardProps } from \"../../../components/board/Board\";\r\nimport { BoardActions, BoardActionTypes } from \"../actions\";\r\n\r\nexport const initialState: BoardProps = {\r\n  pieces: [],\r\n};\r\n\r\nexport const boardReducer = (state = initialState, action: BoardActionTypes) => {\r\n  let newBoard = cloneDeep(state);\r\n\r\n  switch (action.type) {\r\n    case BoardActions.SetBoard:\r\n      return action.payload;\r\n    case BoardActions.AddPiece:\r\n      newBoard.pieces.push(action.payload);\r\n      return { ...state, ...newBoard };\r\n    case BoardActions.RemovePiece:\r\n      let idx = newBoard.pieces.indexOf(action.payload);\r\n      newBoard.pieces.splice(idx, 1);\r\n      return { ...state, ...newBoard };\r\n    case BoardActions.UpdatePiece:\r\n      idx = newBoard.pieces.indexOf(action.payload);\r\n      newBoard.pieces[idx] = action.payload;\r\n      return { ...state, ...newBoard };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}