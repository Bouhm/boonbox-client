{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\sidebar\\\\ObjectSelector.tsx\";\nimport './ObjectSelector.css';\nimport React, { useState } from 'react';\nimport ObjectButton, { ObjectTypes } from './ObjectButton';\n\nconst ObjectSelector = ({\n  handleAddNewObject\n}) => {\n  const [selectedObjectType, setSelectedObjectType] = useState(null);\n\n  const handleClickObjectButton = objType => {\n    setSelectedObjectType(objType);\n  };\n\n  const handleClickNewObject = () => {\n    handleAddNewObject();\n  };\n\n  const renderObjectType = type => {\n    return /*#__PURE__*/React.createElement(ObjectButton, {\n      key: type,\n      type: type,\n      handleButtonClick: handleClickObjectButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ObjectSelector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, ObjectTypes.map(renderObjectType), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleClickNewObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"+ New Object\"));\n};\n\nexport default ObjectSelector;","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/sidebar/ObjectSelector.tsx"],"names":["React","useState","ObjectButton","ObjectTypes","ObjectSelector","handleAddNewObject","selectedObjectType","setSelectedObjectType","handleClickObjectButton","objType","handleClickNewObject","renderObjectType","type","map"],"mappings":";AAAA,OAAO,sBAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,IAAmCC,WAAnC,QAAsD,gBAAtD;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiD;AACtE,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAoB,IAApB,CAA5D;;AAEA,QAAMO,uBAAuB,GAAIC,OAAD,IAAyB;AACvDF,IAAAA,qBAAqB,CAACE,OAAD,CAArB;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCL,IAAAA,kBAAkB;AACnB,GAFD;;AAIA,QAAMM,gBAAgB,GAAIC,IAAD,IAAkB;AACzC,wBAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAnB;AAAyB,MAAA,IAAI,EAAEA,IAA/B;AAAqC,MAAA,iBAAiB,EAAEJ,uBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,WAAW,CAACU,GAAZ,CAAgBF,gBAAhB,CADH,eAEE;AAAK,IAAA,OAAO,EAAED,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD,CArBD;;AAuBA,eAAeN,cAAf","sourcesContent":["import './ObjectSelector.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport ObjectButton, { ObjectType, ObjectTypes } from './ObjectButton';\r\n\r\ntype ObjectSelectorProps = {\r\n  handleAddNewObject(): void;\r\n};\r\n\r\nconst ObjectSelector = ({ handleAddNewObject }: ObjectSelectorProps) => {\r\n  const [selectedObjectType, setSelectedObjectType] = useState<ObjectType | null>(null);\r\n\r\n  const handleClickObjectButton = (objType: ObjectType) => {\r\n    setSelectedObjectType(objType);\r\n  };\r\n\r\n  const handleClickNewObject = () => {\r\n    handleAddNewObject();\r\n  };\r\n\r\n  const renderObjectType = (type: string) => {\r\n    return <ObjectButton key={type} type={type} handleButtonClick={handleClickObjectButton} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"ObjectSelector\">\r\n      {ObjectTypes.map(renderObjectType)}\r\n      <div onClick={handleClickNewObject}>+ New Object</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ObjectSelector;\r\n"]},"metadata":{},"sourceType":"module"}