{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg-client\\\\src\\\\components\\\\board\\\\Piece.tsx\";\nimport Moveable from 'react-moveable';\nimport React from 'react';\n\nconst Piece = props => {\n  return /*#__PURE__*/React.createElement(Moveable, {\n    target: document.querySelector(props.target),\n    container: null,\n    origin: true\n    /* Resize event edges */\n    ,\n    edge: false\n    /* draggable */\n    ,\n    draggable: true,\n    throttleDrag: 0,\n    onDragStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log('onDragStart', target);\n    },\n    onDrag: ({\n      target,\n      beforeDelta,\n      beforeDist,\n      left,\n      top,\n      right,\n      bottom,\n      delta,\n      dist,\n      transform,\n      clientX,\n      clientY\n    }) => {\n      console.log('onDrag left, top', left, top); // target!.style.left = `${left}px`;\n      // target!.style.top = `${top}px`;\n\n      console.log('onDrag translate', dist);\n      target.style.transform = transform;\n    },\n    onDragEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log('onDragEnd', target, isDrag);\n    }\n    /* When resize or scale, keeps a ratio of the width, height. */\n    ,\n    keepRatio: true\n    /* scalable */\n\n    /* Only one of resizable, scalable, warpable can be used. */\n    ,\n    scalable: true,\n    throttleScale: 0,\n    onScaleStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log('onScaleStart', target);\n    },\n    onScale: ({\n      target,\n      scale,\n      dist,\n      delta,\n      transform,\n      clientX,\n      clientY\n    }) => {\n      console.log('onScale scale', scale);\n      target.style.transform = transform;\n    },\n    onScaleEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log('onScaleEnd', target, isDrag);\n    }\n    /* rotatable */\n    ,\n    rotatable: true,\n    throttleRotate: 0,\n    onRotateStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log('onRotateStart', target);\n    },\n    onRotate: ({\n      target,\n      delta,\n      dist,\n      transform,\n      clientX,\n      clientY\n    }) => {\n      console.log('onRotate', dist);\n      target.style.transform = transform;\n    },\n    onRotateEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log('onRotateEnd', target, isDrag);\n    } // Enabling pinchable lets you use events that\n    // can be used in draggable, resizable, scalable, and rotateable.\n    ,\n    pinchable: true,\n    onPinchStart: ({\n      target,\n      clientX,\n      clientY,\n      datas\n    }) => {\n      // pinchStart event occur before dragStart, rotateStart, scaleStart, resizeStart\n      console.log('onPinchStart');\n    },\n    onPinch: ({\n      target,\n      clientX,\n      clientY,\n      datas\n    }) => {\n      // pinch event occur before drag, rotate, scale, resize\n      console.log('onPinch');\n    },\n    onPinchEnd: ({\n      isDrag,\n      target,\n      clientX,\n      clientY,\n      datas\n    }) => {\n      // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\n      console.log('onPinchEnd');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Piece;","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg-client/src/components/board/Piece.tsx"],"names":["Moveable","React","Piece","props","document","querySelector","target","clientX","clientY","console","log","beforeDelta","beforeDist","left","top","right","bottom","delta","dist","transform","style","isDrag","scale","datas"],"mappings":"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","sourcesContent":["import Moveable, { OnDrag, OnResize, OnScale, OnRotate } from 'react-moveable';\r\nimport React from 'react';\r\n\r\nexport type PieceProps = {\r\n  target: string\r\n};\r\n\r\nconst Piece = (props: PieceProps) => {\r\n  return (\r\n    <Moveable\r\n      target={document.querySelector(props.target) as SVGElement}\r\n      container={null}\r\n      origin={true}\r\n\r\n      /* Resize event edges */\r\n      edge={false}\r\n\r\n      /* draggable */\r\n      draggable={true}\r\n      throttleDrag={0}\r\n      onDragStart={({ target, clientX, clientY }) => {\r\n        console.log('onDragStart', target);\r\n      }}\r\n      onDrag={({\r\n          target,\r\n          beforeDelta, beforeDist,\r\n          left, top,\r\n          right, bottom,\r\n          delta, dist,\r\n          transform,\r\n          clientX, clientY,\r\n      }: OnDrag) => {\r\n        console.log('onDrag left, top', left, top);\r\n          // target!.style.left = `${left}px`;\r\n          // target!.style.top = `${top}px`;\r\n        console.log('onDrag translate', dist);\r\n        target!.style.transform = transform;\r\n      }}\r\n      onDragEnd={({ target, isDrag, clientX, clientY }) => {\r\n        console.log('onDragEnd', target, isDrag);\r\n      }}\r\n\r\n      /* When resize or scale, keeps a ratio of the width, height. */\r\n      keepRatio={true}\r\n\r\n      /* scalable */\r\n      /* Only one of resizable, scalable, warpable can be used. */\r\n      scalable={true}\r\n      throttleScale={0}\r\n      onScaleStart={({ target, clientX, clientY }) => {\r\n        console.log('onScaleStart', target);\r\n      }}\r\n      onScale={({\r\n          target, scale, dist, delta, transform,\r\n          clientX, clientY,\r\n      }: OnScale) => {\r\n        console.log('onScale scale', scale);\r\n        target!.style.transform = transform;\r\n      }}\r\n      onScaleEnd={({ target, isDrag, clientX, clientY }) => {\r\n        console.log('onScaleEnd', target, isDrag);\r\n      }}\r\n\r\n      /* rotatable */\r\n      rotatable={true}\r\n      throttleRotate={0}\r\n      onRotateStart={({ target, clientX, clientY }) => {\r\n        console.log('onRotateStart', target);\r\n      }}\r\n      onRotate={({\r\n          target,\r\n          delta, dist,\r\n          transform,\r\n          clientX, clientY,\r\n      }: OnRotate) => {\r\n        console.log('onRotate', dist);\r\n        target!.style.transform = transform;\r\n      }}\r\n      onRotateEnd={({ target, isDrag, clientX, clientY }) => {\r\n        console.log('onRotateEnd', target, isDrag);\r\n      }}\r\n\r\n      // Enabling pinchable lets you use events that\r\n      // can be used in draggable, resizable, scalable, and rotateable.\r\n      pinchable={true}\r\n      onPinchStart={({ target, clientX, clientY, datas }) => {\r\n          // pinchStart event occur before dragStart, rotateStart, scaleStart, resizeStart\r\n        console.log('onPinchStart');\r\n      }}\r\n      onPinch={({ target, clientX, clientY, datas }) => {\r\n          // pinch event occur before drag, rotate, scale, resize\r\n        console.log('onPinch');\r\n      }}\r\n      onPinchEnd={({ isDrag, target, clientX, clientY, datas }) => {\r\n          // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\r\n        console.log('onPinchEnd');\r\n      }}\r\n  />\r\n  );\r\n};\r\n\r\nexport default Piece;\r\n"]},"metadata":{},"sourceType":"module"}