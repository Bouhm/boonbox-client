{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\toolbar\\\\Toolbar.tsx\";\nimport './Toolbar.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPiece } from '../../store/board/actions';\nimport { toggleToolbar } from '../../store/toolbar/actions';\nimport Input from '../form/Input';\nimport ObjectSelector from './ObjectSelector';\n\nconst Toolbar = ({\n  isOpen = true,\n  addPiece,\n  toggleToolbar\n}) => {\n  if (!isOpen) return null;\n\n  const handleAddNewObject = () => {\n    const key = '_' + Math.random().toString(36).substr(2, 9);\n    addPiece({\n      key,\n      data: 'SAMPLE TEXT',\n      type: 'text'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Background:\"), /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ObjectSelector, {\n    handleAddNewObject: handleAddNewObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Background:\"), /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return { ...state.toolbar\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  addPiece,\n  toggleToolbar\n});\nexport default connector(Toolbar);","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/toolbar/Toolbar.tsx"],"names":["React","connect","addPiece","toggleToolbar","Input","ObjectSelector","Toolbar","isOpen","handleAddNewObject","key","Math","random","toString","substr","data","type","mapStateToProps","state","toolbar","connector"],"mappings":";AAAA,OAAO,eAAP;AAEA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,IAAX;AAAiBL,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAuD;AACrE,MAAI,CAACI,MAAL,EAAa,OAAO,IAAP;;AAEb,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,GAAG,GACP,MACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,MAFH,CAEU,CAFV,EAEa,CAFb,CAFF;AAMAX,IAAAA,QAAQ,CAAC;AACPO,MAAAA,GADO;AAEPK,MAAAA,IAAI,EAAE,aAFC;AAGPC,MAAAA,IAAI,EAAE;AAHC,KAAD,CAAR;AAKD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,cAAD;AAAgB,IAAA,kBAAkB,EAAEP,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA1BD;;AA4BA,MAAMQ,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO,EAAE,GAAGA,KAAK,CAACC;AAAX,GAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGlB,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAzB;AAEA,eAAegB,SAAS,CAACb,OAAD,CAAxB","sourcesContent":["import './Toolbar.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { addPiece } from '../../store/board/actions';\r\nimport { toggleToolbar } from '../../store/toolbar/actions';\r\nimport { AppState } from '../App';\r\nimport Input from '../form/Input';\r\nimport ObjectSelector from './ObjectSelector';\r\n\r\nexport type ToolbarProps = {\r\n  isOpen?: boolean;\r\n};\r\n\r\ntype Props = ToolbarProps & ConnectedProps<typeof connector>;\r\n\r\nconst Toolbar = ({ isOpen = true, addPiece, toggleToolbar }: Props) => {\r\n  if (!isOpen) return null;\r\n\r\n  const handleAddNewObject = () => {\r\n    const key =\r\n      '_' +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9);\r\n\r\n    addPiece({\r\n      key,\r\n      data: 'SAMPLE TEXT',\r\n      type: 'text',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <label>Background:</label>\r\n      <Input />\r\n      <ObjectSelector handleAddNewObject={handleAddNewObject} />\r\n      <label>Background:</label>\r\n      <Input />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return { ...state.toolbar };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { addPiece, toggleToolbar });\r\n\r\nexport default connector(Toolbar);\r\n"]},"metadata":{},"sourceType":"module"}