{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\sidebar\\\\Tabs.tsx\";\nimport React from 'react';\n\nconst TabContainer = ({\n  tabs,\n  activeTab,\n  onChange\n}) => {\n  const handleClickTab = e => {\n    onChange(parseInt(e.currentTarget.getAttribute('data-index')));\n  };\n\n  const renderTabLabel = (tab, index) => {\n    const isActive = index === activeTab;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `tab-${index}`,\n      \"data-index\": index,\n      className: `Tab ${isActive ? 'asActive' : ''}`,\n      onClick: handleClickTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, tab.label);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Tab-Container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Tab-Labels\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, tabs.map(renderTabLabel)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Tab-Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, tabs[activeTab].content));\n};\n\nexport default TabContainer;","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/sidebar/Tabs.tsx"],"names":["React","TabContainer","tabs","activeTab","onChange","handleClickTab","e","parseInt","currentTarget","getAttribute","renderTabLabel","tab","index","isActive","label","map","content"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;AAeA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KAAsD;AACzE,QAAMC,cAAc,GAAIC,CAAD,IAAyB;AAC9CF,IAAAA,QAAQ,CAACG,QAAQ,CAACD,CAAC,CAACE,aAAF,CAAgBC,YAAhB,CAA6B,YAA7B,CAAD,CAAT,CAAR;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,CAACC,GAAD,EAAYC,KAAZ,KAA8B;AACnD,UAAMC,QAAQ,GAAGD,KAAK,KAAKT,SAA3B;AAEA,wBACE;AACE,MAAA,GAAG,EAAG,OAAMS,KAAM,EADpB;AAEE,oBAAYA,KAFd;AAGE,MAAA,SAAS,EAAG,OAAMC,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAH/C;AAIE,MAAA,OAAO,EAAER,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGM,GAAG,CAACG,KANP,CADF;AAUD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BZ,IAAI,CAACa,GAAL,CAASL,cAAT,CAA7B,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BR,IAAI,CAACC,SAAD,CAAJ,CAAgBa,OAA9C,CAFF,CADF;AAMD,CA1BD;;AA4BA,eAAef,YAAf","sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\nimport { SidebarActionTypes } from '../../store/sidebar/actions';\r\n\r\nexport interface ITab {\r\n  label: string;\r\n  content: ReactNode;\r\n}\r\n\r\ntype TabContainerProps = {\r\n  tabs: ITab[];\r\n  activeTab: number;\r\n  onChange(tabIndex: number): SidebarActionTypes;\r\n};\r\n\r\nconst TabContainer = ({ tabs, activeTab, onChange }: TabContainerProps) => {\r\n  const handleClickTab = (e: React.MouseEvent) => {\r\n    onChange(parseInt(e.currentTarget.getAttribute('data-index')!));\r\n  };\r\n\r\n  const renderTabLabel = (tab: ITab, index: number) => {\r\n    const isActive = index === activeTab;\r\n\r\n    return (\r\n      <div\r\n        key={`tab-${index}`}\r\n        data-index={index}\r\n        className={`Tab ${isActive ? 'asActive' : ''}`}\r\n        onClick={handleClickTab}\r\n      >\r\n        {tab.label}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"Tab-Container\">\r\n      <div className=\"Tab-Labels\">{tabs.map(renderTabLabel)}</div>\r\n      <div className=\"Tab-Content\">{tabs[activeTab].content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabContainer;\r\n"]},"metadata":{},"sourceType":"module"}