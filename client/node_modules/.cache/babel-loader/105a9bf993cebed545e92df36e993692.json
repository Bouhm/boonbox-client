{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BPAK\\\\projects\\\\smorg\\\\src\\\\components\\\\sidebar\\\\Tools.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPiece } from '../../store/board/actions';\nimport Input from '../form/Input';\nimport ObjectSelector from './ObjectSelector';\nimport useForm from '../form/useForm';\n\nconst Tools = ({\n  isOpen = true,\n  addPiece\n}) => {\n  const bgInputName = 'background';\n  const objValName = 'value';\n  const {\n    formData,\n    handleInputChange\n  } = useForm({\n    [bgInputName]: '',\n    [objValName]: ''\n  });\n\n  const handleAddNewObject = () => {\n    const key = '_' + Math.random().toString(36).substr(2, 9);\n    addPiece({\n      key,\n      data: formData[objValName],\n      type: 'text'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Tools\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: bgInputName,\n    value: formData[bgInputName],\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ObjectSelector, {\n    handleAddNewObject: handleAddNewObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: objValName,\n    value: formData[objValName],\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return { ...state.sidebar\n  };\n};\n\nconst connector = connect(mapStateToProps, {\n  addPiece\n});\nexport default connector(Tools);","map":{"version":3,"sources":["C:/Users/BPAK/projects/smorg/src/components/sidebar/Tools.tsx"],"names":["React","connect","addPiece","Input","ObjectSelector","useForm","Tools","isOpen","bgInputName","objValName","formData","handleInputChange","handleAddNewObject","key","Math","random","toString","substr","data","type","mapStateToProps","state","sidebar","connector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,IAAX;AAAiBL,EAAAA;AAAjB,CAAD,KAAwC;AACpD,QAAMM,WAAW,GAAG,YAApB;AACA,QAAMC,UAAU,GAAG,OAAnB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAkCN,OAAO,CAAC;AAAE,KAACG,WAAD,GAAe,EAAjB;AAAqB,KAACC,UAAD,GAAc;AAAnC,GAAD,CAA/C;;AAEA,QAAMG,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,GAAG,GACP,MACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,MAFH,CAEU,CAFV,EAEa,CAFb,CAFF;AAMAf,IAAAA,QAAQ,CAAC;AACPW,MAAAA,GADO;AAEPK,MAAAA,IAAI,EAAER,QAAQ,CAACD,UAAD,CAFP;AAGPU,MAAAA,IAAI,EAAE;AAHC,KAAD,CAAR;AAKD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEX,WAAb;AAA0B,IAAA,KAAK,EAAEE,QAAQ,CAACF,WAAD,CAAzC;AAAwD,IAAA,QAAQ,EAAEG,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,kBAAkB,EAAEC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,UAAb;AAAyB,IAAA,KAAK,EAAEC,QAAQ,CAACD,UAAD,CAAxC;AAAsD,IAAA,QAAQ,EAAEE,iBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA1BD;;AA4BA,MAAMS,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO,EAAE,GAAGA,KAAK,CAACC;AAAX,GAAP;AACD,CAFD;;AAIA,MAAMC,SAAS,GAAGtB,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAzB;AAEA,eAAeqB,SAAS,CAACjB,KAAD,CAAxB","sourcesContent":["import React from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\n\r\nimport { addPiece } from '../../store/board/actions';\r\nimport { AppState } from '../App';\r\nimport Input from '../form/Input';\r\nimport ObjectSelector from './ObjectSelector';\r\nimport useForm from '../form/useForm';\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst Tools = ({ isOpen = true, addPiece }: Props) => {\r\n  const bgInputName = 'background';\r\n  const objValName = 'value';\r\n  const { formData, handleInputChange } = useForm({ [bgInputName]: '', [objValName]: '' });\r\n\r\n  const handleAddNewObject = () => {\r\n    const key =\r\n      '_' +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9);\r\n\r\n    addPiece({\r\n      key,\r\n      data: formData[objValName],\r\n      type: 'text',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Tools\">\r\n      <Input name={bgInputName} value={formData[bgInputName]} onChange={handleInputChange} />\r\n      <ObjectSelector handleAddNewObject={handleAddNewObject} />\r\n      <Input name={objValName} value={formData[objValName]} onChange={handleInputChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppState) => {\r\n  return { ...state.sidebar };\r\n};\r\n\r\nconst connector = connect(mapStateToProps, { addPiece });\r\n\r\nexport default connector(Tools);\r\n"]},"metadata":{},"sourceType":"module"}